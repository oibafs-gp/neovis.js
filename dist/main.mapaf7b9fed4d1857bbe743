{"version":3,"file":"neovis-without-dependencies.js","mappings":"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","sources":["webpack://NeoVis/webpack/universalModuleDefinition","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/array/is-array\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/array/is-array\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/array/is-array\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/instance/concat\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/instance/concat\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/instance/concat\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/instance/for-each\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/instance/for-each\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/instance/keys\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/instance/keys\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/instance/keys\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/instance/map\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/instance/map\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/instance/map\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/instance/reduce\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/instance/reduce\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/instance/reduce\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/object/entries\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/object/entries\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/object/entries\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/object/keys\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/object/keys\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/object/keys\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/promise\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/promise\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/promise\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/set-timeout\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/set-timeout\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/set-timeout\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/symbol\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/symbol\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/symbol\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/weak-map\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/weak-map\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/weak-map\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/core-js-stable/weak-set\",\"commonjs2\":\"@babel/runtime-corejs3/core-js-stable/weak-set\",\"amd\":\"@babel/runtime-corejs3/core-js-stable/weak-set\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/helpers/classPrivateFieldGet\",\"commonjs2\":\"@babel/runtime-corejs3/helpers/classPrivateFieldGet\",\"amd\":\"@babel/runtime-corejs3/helpers/classPrivateFieldGet\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/helpers/classPrivateFieldSet\",\"commonjs2\":\"@babel/runtime-corejs3/helpers/classPrivateFieldSet\",\"amd\":\"@babel/runtime-corejs3/helpers/classPrivateFieldSet\"}","webpack://NeoVis/external umd {\"commonjs\":\"@babel/runtime-corejs3/helpers/defineProperty\",\"commonjs2\":\"@babel/runtime-corejs3/helpers/defineProperty\",\"amd\":\"@babel/runtime-corejs3/helpers/defineProperty\"}","webpack://NeoVis/external umd {\"commonjs\":\"deepmerge\",\"commonjs2\":\"deepmerge\",\"amd\":\"deepmerge\"}","webpack://NeoVis/external umd {\"commonjs\":\"neo4j-driver\",\"commonjs2\":\"neo4j-driver\",\"amd\":\"neo4j-driver\"}","webpack://NeoVis/external umd {\"commonjs\":\"neo4j-driver-core\",\"commonjs2\":\"neo4j-driver-core\",\"amd\":\"neo4j-driver-core\"}","webpack://NeoVis/external umd {\"commonjs\":\"vis-network/standalone\",\"commonjs2\":\"vis-network/standalone\",\"amd\":\"vis-network/standalone\"}","webpack://NeoVis/webpack/bootstrap","webpack://NeoVis/webpack/runtime/compat get default export","webpack://NeoVis/webpack/runtime/define property getters","webpack://NeoVis/webpack/runtime/hasOwnProperty shorthand","webpack://NeoVis/webpack/runtime/make namespace object","webpack://NeoVis/./src/defaults.ts","webpack://NeoVis/./src/events.ts","webpack://NeoVis/./src/types.ts","webpack://NeoVis/./src/neovis.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@babel/runtime-corejs3/helpers/defineProperty\"), require(\"@babel/runtime-corejs3/helpers/classPrivateFieldSet\"), require(\"@babel/runtime-corejs3/helpers/classPrivateFieldGet\"), require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"), require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/reduce\"), require(\"@babel/runtime-corejs3/core-js-stable/object/entries\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"), require(\"@babel/runtime-corejs3/core-js-stable/weak-map\"), require(\"@babel/runtime-corejs3/core-js-stable/weak-set\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"), require(\"@babel/runtime-corejs3/core-js-stable/promise\"), require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"), require(\"neo4j-driver\"), require(\"neo4j-driver-core\"), require(\"vis-network/standalone\"), require(\"deepmerge\"), require(\"@babel/runtime-corejs3/core-js-stable/symbol\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@babel/runtime-corejs3/helpers/defineProperty\", \"@babel/runtime-corejs3/helpers/classPrivateFieldSet\", \"@babel/runtime-corejs3/helpers/classPrivateFieldGet\", \"@babel/runtime-corejs3/core-js-stable/object/keys\", \"@babel/runtime-corejs3/core-js-stable/array/is-array\", \"@babel/runtime-corejs3/core-js-stable/instance/map\", \"@babel/runtime-corejs3/core-js-stable/instance/keys\", \"@babel/runtime-corejs3/core-js-stable/instance/reduce\", \"@babel/runtime-corejs3/core-js-stable/object/entries\", \"@babel/runtime-corejs3/core-js-stable/instance/concat\", \"@babel/runtime-corejs3/core-js-stable/weak-map\", \"@babel/runtime-corejs3/core-js-stable/weak-set\", \"@babel/runtime-corejs3/core-js-stable/instance/for-each\", \"@babel/runtime-corejs3/core-js-stable/promise\", \"@babel/runtime-corejs3/core-js-stable/set-timeout\", \"neo4j-driver\", \"neo4j-driver-core\", \"vis-network/standalone\", \"deepmerge\", \"@babel/runtime-corejs3/core-js-stable/symbol\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NeoVis\"] = factory(require(\"@babel/runtime-corejs3/helpers/defineProperty\"), require(\"@babel/runtime-corejs3/helpers/classPrivateFieldSet\"), require(\"@babel/runtime-corejs3/helpers/classPrivateFieldGet\"), require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"), require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/reduce\"), require(\"@babel/runtime-corejs3/core-js-stable/object/entries\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"), require(\"@babel/runtime-corejs3/core-js-stable/weak-map\"), require(\"@babel/runtime-corejs3/core-js-stable/weak-set\"), require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"), require(\"@babel/runtime-corejs3/core-js-stable/promise\"), require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"), require(\"neo4j-driver\"), require(\"neo4j-driver-core\"), require(\"vis-network/standalone\"), require(\"deepmerge\"), require(\"@babel/runtime-corejs3/core-js-stable/symbol\"));\n\telse\n\t\troot[\"NeoVis\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__783__, __WEBPACK_EXTERNAL_MODULE__642__, __WEBPACK_EXTERNAL_MODULE__779__, __WEBPACK_EXTERNAL_MODULE__995__, __WEBPACK_EXTERNAL_MODULE__852__, __WEBPACK_EXTERNAL_MODULE__820__, __WEBPACK_EXTERNAL_MODULE__270__, __WEBPACK_EXTERNAL_MODULE__83__, __WEBPACK_EXTERNAL_MODULE__209__, __WEBPACK_EXTERNAL_MODULE__848__, __WEBPACK_EXTERNAL_MODULE__317__, __WEBPACK_EXTERNAL_MODULE__483__, __WEBPACK_EXTERNAL_MODULE__349__, __WEBPACK_EXTERNAL_MODULE__723__, __WEBPACK_EXTERNAL_MODULE__519__, __WEBPACK_EXTERNAL_MODULE__949__, __WEBPACK_EXTERNAL_MODULE__55__, __WEBPACK_EXTERNAL_MODULE__365__, __WEBPACK_EXTERNAL_MODULE__613__, __WEBPACK_EXTERNAL_MODULE__581__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__852__;","module.exports = __WEBPACK_EXTERNAL_MODULE__848__;","module.exports = __WEBPACK_EXTERNAL_MODULE__349__;","module.exports = __WEBPACK_EXTERNAL_MODULE__270__;","module.exports = __WEBPACK_EXTERNAL_MODULE__820__;","module.exports = __WEBPACK_EXTERNAL_MODULE__83__;","module.exports = __WEBPACK_EXTERNAL_MODULE__209__;","module.exports = __WEBPACK_EXTERNAL_MODULE__995__;","module.exports = __WEBPACK_EXTERNAL_MODULE__723__;","module.exports = __WEBPACK_EXTERNAL_MODULE__519__;","module.exports = __WEBPACK_EXTERNAL_MODULE__581__;","module.exports = __WEBPACK_EXTERNAL_MODULE__317__;","module.exports = __WEBPACK_EXTERNAL_MODULE__483__;","module.exports = __WEBPACK_EXTERNAL_MODULE__779__;","module.exports = __WEBPACK_EXTERNAL_MODULE__642__;","module.exports = __WEBPACK_EXTERNAL_MODULE__783__;","module.exports = __WEBPACK_EXTERNAL_MODULE__613__;","module.exports = __WEBPACK_EXTERNAL_MODULE__949__;","module.exports = __WEBPACK_EXTERNAL_MODULE__55__;","module.exports = __WEBPACK_EXTERNAL_MODULE__365__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const defaults = {\n\n\tneo4j: {\n\t\tinitialQuery: `MATCH (n) WHERE exists(n.pagerank)\n                        WITH (n), RAND() AS random\n                        ORDER BY random LIMIT 3000\n                        OPTIONAL MATCH (n)-[r]-(m)\n                        //WITH n,r,m WHERE exists(n.pagerank) AND exists(m.pagerank) AND exists(m.community)\n                        RETURN n, r, m;`,\n\t\tneo4jUri: 'bolt://localhost:7687',\n\t\tneo4jUser: 'neo4j',\n\t\tneo4jPassword: 'neo4j',\n\t\tdriverConfig: {\n\t\t\tencrypted: 'ENCRYPTION_OFF',\n\t\t\ttrust: 'TRUST_ALL_CERTIFICATES',\n\t\t\tmaxConnectionPoolSize: 100,\n\t\t\tconnectionAcquisitionTimeout: 10000,\n\t\t\tdisableLosslessIntegers: true,\n\t\t},\n\t\tgroupAsLabel: true\n\t},\n\n\tvisJs: {\n\t\tnodes: {\n\t\t\tfont: {\n\t\t\t\tsize: 26,\n\t\t\t\tstrokeWidth: 7\n\t\t\t},\n\t\t\tscaling: {}\n\t\t},\n\t\tedges: {\n\t\t\tarrows: {\n\t\t\t\tto: { enabled: false }\n\t\t\t},\n\t\t\tlength: 200\n\t\t},\n\t\tlayout: {\n\t\t\timprovedLayout: false,\n\t\t\thierarchical: {\n\t\t\t\tenabled: false,\n\t\t\t\tsortMethod: 'hubsize'\n\t\t\t}\n\t\t},\n\t\tphysics: { // TODO: adaptive physics settings based on size of graph rendered\n\t\t\t// enabled: true,\n\t\t\t// timestep: 0.5,\n\t\t\t// stabilization: {\n\t\t\t//     iterations: 10\n\t\t\t// }\n\n\t\t\tadaptiveTimestep: true,\n\t\t\t// barnesHut: {\n\t\t\t//     gravitationalConstant: -8000,\n\t\t\t//     springConstant: 0.04,\n\t\t\t//     springLength: 95\n\t\t\t// },\n\t\t\tstabilization: {\n\t\t\t\titerations: 200,\n\t\t\t\tfit: true\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport { defaults };","import { Edge, Node } from './types';\n\nexport enum NeoVisEvents {\n\tCompletionEvent = 'completed',\n\tClickNodeEvent = 'clickNode',\n\tClickEdgeEvent = 'clickEdge',\n\tErrorEvent = 'error'\n}\n\nexport interface EventFunctionTypes {\n\t[NeoVisEvents.CompletionEvent]: (event: { recordCount: number }) => void;\n\t[NeoVisEvents.ClickNodeEvent]: (event: { nodeId: number, node: Node }) => void;\n\t[NeoVisEvents.ClickEdgeEvent]: (event: { edgeId: number, edge: Edge }) => void;\n\t[NeoVisEvents.ErrorEvent]: (event: { error: Error }) => void;\n}\n\nexport class EventController {\n\tprivate readonly _handlers: { [p: string]: Function[] };\n\n\tconstructor() {\n\t\tthis._handlers = {\n\t\t\t[NeoVisEvents.CompletionEvent]: [],\n\t\t\t[NeoVisEvents.ErrorEvent]: [],\n\t\t\t[NeoVisEvents.ClickNodeEvent]: [],\n\t\t\t[NeoVisEvents.ClickEdgeEvent]: [],\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param eventType - Type of the event to be handled\n\t * @param handler - Handler to manage the event\n\t */\n\tregister<T extends NeoVisEvents>(eventType: T, handler: EventFunctionTypes[T]): void {\n\t\tif (this._handlers[eventType] === undefined) {\n\t\t\tthrow new Error('Unknown event: ' + eventType);\n\t\t}\n\n\t\tthis._handlers[eventType].push(handler);\n\t}\n\n\t/**\n\t *\n\t * @param {string} eventType - Type of the event generated\n\t * @param {any} values - Values associated to the event\n\t */\n\tgenerateEvent<T extends NeoVisEvents>(eventType: T, values: Parameters<EventFunctionTypes[T]>[0]): void {\n\t\tif (this._handlers[eventType] === undefined) {\n\t\t\tthrow new Error('Unknown event: ' + eventType);\n\t\t}\n\n\t\tfor (const handler of this._handlers[eventType]) {\n\t\t\thandler(values);\n\t\t}\n\t}\n}\n","import type * as Neo4jTypes from 'neo4j-driver';\nimport type * as VisNetwork from 'vis-network';\n\n\nexport const NEOVIS_DEFAULT_CONFIG = Symbol();\nexport const NEOVIS_ADVANCED_CONFIG = Symbol();\nexport type NumberOrInteger = number | Neo4jTypes.Integer;\n\nexport type RecursiveMapToDist<T, New> = T extends object ? RecursiveMapTo<T, New> : New\nexport type DataFunctionType = (any?: unknown) => AsyncIterable<Neo4jTypes.Record> | Promise<Iterable<Neo4jTypes.Record>> | Iterable<Neo4jTypes.Record>;\n\n/**\n * Maps a type recursively and replace each non object type with the new type\n * @param <T> type to map\n * @param <New> type to map to for each non object type\n */\nexport type RecursiveMapTo<T, New> = { [P in keyof T]: RecursiveMapToDist<T[P], New> }\n\nexport type RecursiveMapToFunctionDist<T, PARAM_TYPE> = T extends object ? ((param: PARAM_TYPE) => T) | (RecursiveMapToFunction<T, PARAM_TYPE>) : (param: PARAM_TYPE) => T\n/**\n * Maps a type recursively and adds the ability for each object property to be a function that returns the same type\n * but replace each non object type with a function that returns the same type\n * @param <T> type to map\n * @param <PARAM_TYPE> type of parameter the functions get\n */\nexport type RecursiveMapToFunction<T, PARAM_TYPE> = {\n\t[P in keyof T]: RecursiveMapToFunctionDist<T[P], PARAM_TYPE>\n};\n\n/**\n * Cypher quarry\n */\nexport type Cypher = string;\n\nexport interface NeoVisAdvanceConfig<VIS_TYPE, NEO_TYPE> {\n\t/**\n\t * Static values that will the same for every node/relationship\n\t * */\n\tstatic?: VIS_TYPE;\n\t/**\n\t * Cypher that will be called for every object (will look the same as\n\t */\n\tcypher?: RecursiveMapTo<VIS_TYPE, Cypher>;\n\tfunction?: RecursiveMapToFunction<VIS_TYPE, NEO_TYPE>;\n}\n\nexport interface NonFlatNeoVisAdvanceConfig<VIS_TYPE, NEO_TYPE> extends NeoVisAdvanceConfig<VIS_TYPE, NEO_TYPE> {\n\tproperty?: RecursiveMapTo<VIS_TYPE, string>;\n}\n\nexport type NeovisDataConfig<VIS_TYPE, NEO_TYPE> =\n\tRecursiveMapTo<VIS_TYPE, string>\n\t& { [NEOVIS_ADVANCED_CONFIG]?: NeoVisAdvanceConfig<VIS_TYPE, NEO_TYPE> };\n\n/**\n * A mapper between neo4j node properties names to vis-network node config\n * @link https://visjs.github.io/vis-network/docs/network/nodes.html\n */\nexport interface LabelConfig extends RecursiveMapTo<VisNetwork.Node, string> {\n\t/**\n\t * advance options which allow for:\n\t * mapping static options to each node\n\t * mapping cypher to run for each node to determine vis-network node option\n\t * mapping function that gets the neo4j node and returns vis-network node option\n\t */\n\t[NEOVIS_ADVANCED_CONFIG]?: NeoVisAdvanceConfig<VisNetwork.Node, Neo4jTypes.Node<number>>;\n}\n\n/**\n * A mapper between neo4j relationship properties names to vis-network edge config\n * @link https://visjs.github.io/vis-network/docs/network/edges.html\n */\nexport interface RelationshipConfig extends RecursiveMapTo<VisNetwork.Edge, string> {\n\t/**\n\t * advance options which allow for:\n\t * mapping static options to each edge\n\t * mapping cypher to run for each relationship to determine vis-network edge option\n\t * mapping function that gets the neo4j relationship and returns vis-network edge option\n\t */\n\t[NEOVIS_ADVANCED_CONFIG]?: NeoVisAdvanceConfig<VisNetwork.Edge, Neo4jTypes.Relationship<number>>;\n}\n\nexport interface Neo4jConfig {\n\t/**\n\t * neo4j server\n\t * @example bolt://localhost:7687\n\t */\n\tserverUrl?: string;\n\tserverUser?: string;\n\tserverPassword?: string;\n\t/**\n\t * @link https://neo4j.com/docs/api/javascript-driver/current/function/index.html#configuration\n\t */\n\tdriverConfig?: Neo4jTypes.Config;\n}\n\nexport interface BaseNeovisConfig {\n\t/**\n\t * Html id of the element you want Neovis to render on\n\t */\n\tcontainerId: string;\n\t/**\n\t * database name you want to connect to\n\t * @default neo4j\n\t */\n\tserverDatabase?: string;\n\t/**\n\t * Neo4j Driver instance or configuration to make one\n\t */\n\tneo4j?: Neo4jTypes.Driver | Neo4jConfig;\n\t/**\n\t * Vis network config to override neovis defaults\n\t * @link https://visjs.github.io/vis-network/docs/network/#options\n\t */\n\tvisConfig?: VisNetwork.Options;\n\n\n\t/**\n\t * function to get fetch data instead of neo4j driver\n\t * \n\t * it needs to return a list of records\n\t * \n\t * example in examples/simple-dataFunction-example.html\n\t */\n\tdataFunction?: DataFunctionType\n\n\t/**\n\t * The Cypher query that will get the data\n\t */\n\tinitialCypher?: Cypher;\n\t/**\n\t * Should output debug messages to console\n\t * @default false\n\t */\n\tconsoleDebug?: boolean;\n\n\t/**\n\t * Should group be the label\n\t * @default true\n\t */\n\tgroupAsLabel?: boolean;\n\n\t/**\n\t * Tells Neovis is the config is flat or not\n\t * @default false\n\t */\n\tnonFlat?: boolean;\n}\n\n/**\n * @example\n * ```js\n * //simple\n * {\n *      containerId: \"viz\",\n *      neo4j: {\n *      \tserverUrl: \"bolt://localhost:7687\",\n *      \tserverUser: \"neo4j\",\n *      \tserverPassword: \"sorts-swims-burglaries\"\n *      },\n *      labels: {\n *      \tCharacter: {\n *      \t\tlabel: \"name\",\n *      \t\tvalue: \"pagerank\",\n *      \t\tgroup: \"community\"\n *      \t}\n *      },\n *      relationships: {\n *      \tINTERACTS: {\n *      \t\tvalue: \"weight\"\n *      \t}\n *      },\n *      initialCypher: \"MATCH (n)-[r:INTERACTS]->(m) RETURN n,r,m\"\n * }\n * // advance\n * {\n *      containerId: 'viz',\n *      neo4j: {\n *      \tserverUrl: 'bolt://localhost:7687',\n *      \tserverUser: 'neo4j',\n *      \tserverPassword: 'gland-presentation-worry'\n *      },\n *      visConfig: {\n *      \tnodes: {\n *      \t\tshape: 'square'\n *      \t},\n *      \tedges: {\n *      \t\tarrows: {\n *      \t\t\tto: {enabled: true}\n *      \t\t}\n *      \t},\n *      },\n *      labels: {\n *      \tCharacter: {\n *      \t\tlabel: 'pagerank',\n *      \t\tgroup: 'community',\n *      \t\t[Neovis.NEOVIS_ADVANCED_CONFIG]: {\n *      \t\t\tcypher: {\n *      \t\t\t\tvalue: \"MATCH (n) WHERE id(n) = $id RETURN n.size\"\n *      \t\t\t},\n *      \t\t\tfunction: {\n *      \t\t\t\ttitle: (node) => {\n *      \t\t\t\t\treturn viz.nodeToHtml(node, undefined);\n *      \t\t\t\t}\n *      \t\t\t},\n *      \t\t}\n *      \t}\n *      },\n *      relationships: {\n *      \tINTERACTS: {\n *      \t\tvalue: 'weight',\n *      \t\t[Neovis.NEOVIS_ADVANCED_CONFIG]: {\n *      \t\t\tfunction: {\n *      \t\t\t\ttitle: (edge) => {\n *      \t\t\t\t\treturn viz.nodeToHtml(edge, undefined);\n *      \t\t\t\t}\n *      \t\t\t},\n *      \t\t}\n *      \t}\n *      },\n *      initialCypher: 'MATCH (n)-[r]->(m) RETURN n,r,m'\n * }\n * ```\n */\nexport interface NeovisConfig extends BaseNeovisConfig {\n\tnonFlat?: false;\n\t/**\n\t * @example ```javascript\n\t *{\n\t * \tCharacter: {\n\t * \tlabel: 'pagerank',\n\t * \t\tgroup: 'community',\n\t * \t\t[Neovis.NEOVIS_ADVANCED_CONFIG]: {\n\t * \t\t\tcypher: {\n\t * \t\t\t\tvalue: \"MATCH (n) WHERE id(n) = $id RETURN n.size\"\n\t * \t\t\t},\n\t * \t\t\tfunction: {\n\t * \t\t\t\ttitle: (node) => {\n\t * \t\t\t\t\treturn viz.nodeToHtml(node, undefined);\n\t * \t\t\t\t}\n\t * \t\t\t},\n\t * \t\t}\n\t * \t}\n\t * }\n\t * ```\n\t */\n\tlabels?: {\n\t\t[label: string]: LabelConfig,\n\t\t[NEOVIS_DEFAULT_CONFIG]?: LabelConfig\n\t};\n\t/**\n\t * @example\n\t * ``` js\n\t * {\n\t *      INTERACTS: {\n\t *  \t    value: 'weight',\n\t *  \t    [Neovis.NEOVIS_ADVANCED_CONFIG]: {\n\t *  \t    \tfunction: {\n\t *  \t    \t\ttitle: (edge) => {\n\t *  \t    \t\t\treturn viz.nodeToHtml(edge, undefined);\n\t *  \t    \t\t}\n\t *  \t    \t},\n\t *  \t    }\n\t *      }\n\t * }\n\t * ```\n\t */\n\trelationships?: {\n\t\t[relationship: string]: RelationshipConfig,\n\t\t[NEOVIS_DEFAULT_CONFIG]?: RelationshipConfig\n\t};\n}\n\nexport type NonFlatLabelConfig = NonFlatNeoVisAdvanceConfig<VisNetwork.Node, Neo4jTypes.Node<number>>;\nexport type NonFlatRelationsipConfig = NonFlatNeoVisAdvanceConfig<VisNetwork.Edge, Neo4jTypes.Relationship<number>>;\n\n/**\n * non flat version of the configuration (without Symbols)\n * look at the normal config for more information\n *\n * @example\n * ```js\n * {\n *      containerId: 'viz',\n *      nonFlat: true,\n *      neo4j: {\n *      \tserverUrl: 'bolt://localhost:7687',\n *      \tserverUser: 'neo4j',\n *      \tserverPassword: 'gland-presentation-worry'\n *      },\n *      visConfig: {\n *      \tnodes: {\n *      \t\tshape: 'square'\n *      \t},\n *      \tedges: {\n *      \t\tarrows: {\n *      \t\t\tto: {enabled: true}\n *      \t\t}\n *      \t},\n *      },\n *      labels: {\n *      \tCharacter: {\n *      \t\tproperty: {\n *      \t\t    label: 'pagerank',\n *      \t\t    group: 'community'\n *      \t    }\n *      \t\tcypher: {\n *      \t\t\tvalue: \"MATCH (n) WHERE id(n) = $id RETURN n.size\"\n *      \t\t},\n *      \t\tfunction: {\n *      \t\t\ttitle: (node) => {\n *      \t\t\t\treturn viz.nodeToHtml(node, undefined);\n *      \t\t\t}\n *      \t\t}\n *      \t}\n *      },\n *      relationships: {\n *      \tINTERACTS: {\n *              property: {\n *      \t\t    value: 'weight'\n *      \t    }\n *      \t\tfunction: {\n *      \t\t\ttitle: (edge) => {\n *      \t\t\t\treturn viz.nodeToHtml(edge, undefined);\n *      \t\t\t}\n *      \t\t}\n *      \t}\n *      },\n *      initialCypher: 'MATCH (n)-[r]->(m) RETURN n,r,m'\n * }\n * ```\n */\nexport interface NonFlatNeovisConfig extends BaseNeovisConfig {\n\tnonFlat: true;\n\tdefaultLabelConfig?: NonFlatLabelConfig;\n\tdefaultRelationshipsConfig?: NonFlatRelationsipConfig;\n\tlabels?: Record<string, NonFlatLabelConfig>;\n\trelationships?: Record<string, NonFlatRelationsipConfig>;\n}\n\n/**\n * A network node with raw neo4j node\n */\nexport interface Node extends VisNetwork.Node {\n\t/**\n\t * @link https://neo4j.com/docs/api/javascript-driver/current/class/src/graph-types.js~Node.html\n\t */\n\traw: Neo4jTypes.Node<NumberOrInteger>;\n}\n\n/**\n * A network edge with raw neo4j relationship\n */\nexport interface Edge extends VisNetwork.Edge {\n\t/**\n\t * https://neo4j.com/docs/api/javascript-driver/current/class/src/graph-types.js~Relationship.html\n\t */\n\tid: number | string;\n\traw: Neo4jTypes.Relationship<NumberOrInteger>;\n}","'use strict'\n\nimport * as Neo4jTypes from 'neo4j-driver'\nimport Neo4j from 'neo4j-driver'\nimport * as Neo4jCore from 'neo4j-driver-core'\nimport { isInt, isNode, isPath, isRelationship } from 'neo4j-driver-core'\nimport * as vis from 'vis-network/standalone'\nimport { defaults } from './defaults'\nimport { EventController, EventFunctionTypes, NeoVisEvents } from './events'\nimport deepmerge from 'deepmerge'\nimport type * as VisNetwork from 'vis-network'\nimport {\n  Cypher,\n  DataFunctionType,\n  Edge,\n  LabelConfig,\n  Neo4jConfig,\n  NEOVIS_ADVANCED_CONFIG,\n  NEOVIS_DEFAULT_CONFIG,\n  NeovisConfig,\n  NeovisDataConfig,\n  Node,\n  NonFlatLabelConfig,\n  NonFlatNeoVisAdvanceConfig,\n  NonFlatNeovisConfig,\n  NonFlatRelationsipConfig,\n  NumberOrInteger,\n  RecursiveMapTo,\n  RecursiveMapToFunction,\n  RelationshipConfig,\n} from './types'\n\nexport * from './events'\nexport * from './types'\n\nfunction toNeo4jInt({\n  low,\n  high,\n}: {\n  high: number\n  low: number\n}): Neo4jTypes.Integer {\n  return new Neo4j.types.Integer(low, high)\n}\n\nfunction integerToNumber(integer: Neo4jTypes.Integer): number | string {\n  return integer.getHighBits() === 0 ? integer.toInt() : integer.toString()\n}\n\ninterface FakeIdentity {\n  high: number\n  low: number\n}\ninterface FakeNode {\n  labels: string[]\n  identity: FakeIdentity\n  properties: Record<string, FakeIdentity | unknown>\n}\n\ninterface FakeRelationship {\n  identity: FakeIdentity\n  type: string\n  start: FakeIdentity\n  end: FakeIdentity\n  properties: Record<string, FakeIdentity | unknown>\n}\n\ninterface FakePathSegments {\n  start: FakeNode\n  end: FakeNode\n  relationship: FakeRelationship\n}\n\ninterface FakePath {\n  start: FakeNode\n  end: FakeNode\n  segments: FakePathSegments[]\n}\n\nconst FakeTypeToType: Record<\n  number,\n  { keys: string[]; type: new (..._) => unknown }[]\n> = {\n  2: [\n    {\n      keys: ['low', 'high'],\n      type: Neo4j.types.Integer,\n    },\n  ],\n  3: [\n    {\n      keys: ['year', 'month', 'day'],\n      type: Neo4j.types.Date,\n    },\n    {\n      keys: ['srid', 'x', 'y'],\n      type: Neo4j.types.Point,\n    },\n  ],\n  4: [\n    {\n      keys: ['months', 'days', 'seconds', 'nanoseconds'],\n      type: Neo4j.types.Duration,\n    },\n    {\n      keys: ['hour', 'minute', 'second', 'nanosecond'],\n      type: Neo4j.types.LocalTime,\n    },\n    {\n      keys: ['srid', 'x', 'y', 'z'],\n      type: Neo4j.types.Point,\n    },\n  ],\n  5: [\n    {\n      keys: ['hour', 'minute', 'second', 'nanosecond', 'timeZoneOffsetSeconds'],\n      type: Neo4j.types.Time,\n    },\n  ],\n  7: [\n    {\n      keys: ['year', 'month', 'day', 'hour', 'minute', 'second', 'nanosecond'],\n      type: Neo4j.types.LocalDateTime,\n    },\n  ],\n  8: [\n    {\n      keys: [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'nanosecond',\n        'timeZoneOffsetSeconds',\n      ],\n      type: Neo4j.types.DateTime,\n    },\n  ],\n  9: [\n    {\n      keys: [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'nanosecond',\n        'timeZoneOffsetSeconds',\n        'timeZoneId',\n      ],\n      type: Neo4j.types.DateTime,\n    },\n  ],\n}\n\nfunction isFakeInteger(\n  property: FakeIdentity | unknown,\n): property is FakeIdentity {\n  return (\n    typeof property === 'object' &&\n    'high' in property &&\n    'low' in property &&\n    Object.keys(property).length == 2\n  )\n}\n\nfunction propertyToNormal(value: unknown): unknown {\n  if (Array.isArray(value)) {\n    return value.map(propertyToNormal)\n  } else if (\n    typeof value === 'object' &&\n    Object.keys(value).length in FakeTypeToType\n  ) {\n    for (const fakeType of FakeTypeToType[Object.keys(value).length]) {\n      let isCorrectType = true\n      const rets: unknown[] = []\n      for (const key of fakeType.keys) {\n        if (!(key in value)) {\n          isCorrectType = false\n          break\n        } else {\n          rets.push(\n            isFakeInteger(value[key])\n              ? new Neo4j.types.Integer(value[key].low, value[key].high)\n              : value[key],\n          )\n        }\n      }\n      if (isCorrectType) {\n        return new fakeType.type(...rets)\n      }\n    }\n  } else {\n    return value\n  }\n}\n\nfunction properyMapWithIdentity(\n  properties: Record<string, FakeIdentity | unknown>,\n): Record<string, Neo4jTypes.Integer | unknown> {\n  return Object.entries(properties).reduce((ret, [key, value]) => {\n    ret[key] = propertyToNormal(value)\n    return ret\n  }, {})\n}\n\nfunction dumbToNeo4j(\n  field: FakeNode | FakeRelationship | FakePath,\n): Neo4jTypes.Node | Neo4jTypes.Relationship | Neo4jTypes.Path {\n  if ('labels' in field) {\n    return new Neo4j.types.Node(\n      toNeo4jInt(field.identity),\n      field.labels,\n      properyMapWithIdentity(field.properties),\n    )\n  } else if ('type' in field) {\n    return new Neo4j.types.Relationship(\n      toNeo4jInt(field.identity),\n      toNeo4jInt(field.start),\n      toNeo4jInt(field.end),\n      field.type,\n      properyMapWithIdentity(field.properties),\n    )\n  } else if ('segments' in field) {\n    return new Neo4j.types.Path(\n      new Neo4j.types.Node(\n        toNeo4jInt(field.start.identity),\n        field.start.labels,\n        properyMapWithIdentity(field.start.properties),\n      ),\n      new Neo4j.types.Node(\n        toNeo4jInt(field.end.identity),\n        field.end.labels,\n        properyMapWithIdentity(field.end.properties),\n      ),\n      field.segments.map(\n        (segment) =>\n          new Neo4j.types.PathSegment(\n            new Neo4j.types.Node(\n              toNeo4jInt(segment.start.identity),\n              segment.start.labels,\n              properyMapWithIdentity(segment.start.properties),\n            ),\n            new Neo4j.types.Relationship(\n              toNeo4jInt(segment.relationship.identity),\n              toNeo4jInt(segment.relationship.start),\n              toNeo4jInt(segment.relationship.end),\n              segment.relationship.type,\n              properyMapWithIdentity(segment.relationship.properties),\n            ),\n            new Neo4j.types.Node(\n              toNeo4jInt(segment.end.identity),\n              segment.end.labels,\n              properyMapWithIdentity(segment.end.properties),\n            ),\n          ),\n      ),\n    )\n  }\n}\n\nfunction isNeo4jDriver(\n  neo4jConfig: Neo4jTypes.Driver | Neo4jConfig,\n): neo4jConfig is Neo4jTypes.Driver {\n  return neo4jConfig instanceof Neo4j.driver\n}\nfunction _propertyToHtml<T extends { toString: () => string }>(\n  key: string,\n  value: T | T[],\n): string {\n  if (Array.isArray(value) && value.length > 1) {\n    let out = `<strong>${key}:</strong><br /><ul>`\n    for (const val of value) {\n      out += `<li>${val}</li>`\n    }\n    return out + '</ul>'\n  }\n  return `<strong>${key}:</strong> ${value}<br>`\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _retrieveProperty<T>(prop: string, obj: any): T {\n  if (typeof obj?.properties === 'object') {\n    return isInt(obj.properties[prop])\n      ? integerToNumber(obj.properties[prop])\n      : obj.properties[prop]\n  }\n  throw new Error('Neo4j object is not properly constructed')\n}\n\n/**\n * create html display of the node\n * @param neo4jObject node to create html from\n * @param titleProperties which properties to map\n */\nexport function objectToTitleHtml(\n  neo4jObject:\n    | Neo4jTypes.Node<NumberOrInteger>\n    | Neo4jTypes.Relationship<NumberOrInteger>,\n  titleProperties: string[],\n): HTMLDivElement {\n  let titleString = ''\n  if (!titleProperties) {\n    titleProperties = Object.keys(neo4jObject.properties)\n  }\n  for (const key of titleProperties) {\n    const propVal = _retrieveProperty(key, neo4jObject)\n    if (propVal) {\n      titleString += _propertyToHtml(key, propVal)\n    }\n  }\n  const title = document.createElement('div')\n  title.innerHTML = titleString\n  return title\n}\n\n/**\n * create string display of the node\n * @param neo4jObject node to create title string from\n * @param titleProperties which properties to map\n */\nexport function objectToTitleString(\n  neo4jObject:\n    | Neo4jTypes.Node<NumberOrInteger>\n    | Neo4jTypes.Relationship<NumberOrInteger>,\n  titleProperties: string[],\n): string {\n  let title = ''\n  if (!titleProperties) {\n    titleProperties = Object.keys(neo4jObject.properties)\n  }\n  for (const key of titleProperties) {\n    const propVal = _retrieveProperty(key, neo4jObject)\n    if (propVal) {\n      title += `${key}: ${propVal}\\n`\n    }\n  }\n  return title\n}\n\nexport class NeoVis {\n  static NEOVIS_DEFAULT_CONFIG = NEOVIS_DEFAULT_CONFIG\n  static NEOVIS_ADVANCED_CONFIG = NEOVIS_ADVANCED_CONFIG\n  static objectToTitleHtml = objectToTitleHtml\n  static objectToTitleString = objectToTitleString\n  #data = {\n    nodes: new vis.DataSet<Node>(),\n    edges: new vis.DataSet<Edge>(),\n  }\n  #network: VisNetwork.Network = null\n  #events = new EventController()\n  #config: NeovisConfig | NonFlatNeovisConfig\n  #driver: Neo4jTypes.Driver\n  #database: string\n  #query: Cypher\n  #container: HTMLElement\n\n  /**\n   * All view nodes as DataSet\n   * @link https://visjs.github.io/vis-data/data/dataset.html\n   */\n  get nodes(): VisNetwork.DataSet<Node> {\n    return this.#data.nodes\n  }\n\n  /**\n   * All view edges as DataSet\n   * @link https://visjs.github.io/vis-data/data/dataset.html\n   */\n  get edges(): VisNetwork.DataSet<Edge> {\n    return this.#data.edges\n  }\n\n  /**\n   * @ignore for test purposes only\n   */\n  get _config(): NeovisConfig | NonFlatNeovisConfig {\n    return this.#config\n  }\n\n  /**\n   * The vis network object\n   * @link https://visjs.github.io/vis-network/docs/network/#methods\n   */\n  get network(): VisNetwork.Network | undefined {\n    return this.#network\n  }\n\n  /**\n   *\n   * @constructor\n   * @param {object} config - configures the visualization and Neo4j server connection\n   */\n  constructor(config: NeovisConfig | NonFlatNeovisConfig) {\n    this.#init(config)\n\n    this.#consoleLog(config)\n    this.#consoleLog(defaults)\n  }\n\n  #consoleLog(message: object | string, level = 'log'): void {\n    if (level !== 'log' || this.#config.consoleDebug) {\n      // eslint-disable-next-line no-console\n      console[level](message)\n    }\n  }\n\n  #init(config: NeovisConfig | NonFlatNeovisConfig): void {\n    let defaultLabelConfig: NonFlatLabelConfig | LabelConfig\n    let defaultRelationshipConfig: NonFlatRelationsipConfig | RelationshipConfig\n    if (config.nonFlat && config.defaultLabelConfig) {\n      defaultLabelConfig = config.defaultLabelConfig\n      if (defaultLabelConfig[NEOVIS_ADVANCED_CONFIG]) {\n        throw new Error(\n          \"non flat config can't use NEOVIS_ADVANCED_CONFIG, read the doc to see how the config should look\",\n        )\n      }\n      defaultRelationshipConfig = config.defaultRelationshipsConfig\n      if (defaultRelationshipConfig[NEOVIS_ADVANCED_CONFIG]) {\n        throw new Error(\n          \"non flat config can't use NEOVIS_ADVANCED_CONFIG, read the doc to see how the config should look\",\n        )\n      }\n    } else {\n      defaultLabelConfig = (config as NeovisConfig).labels?.[\n        NEOVIS_DEFAULT_CONFIG\n      ]\n      defaultRelationshipConfig = (config as NeovisConfig).relationships?.[\n        NEOVIS_DEFAULT_CONFIG\n      ]\n    }\n    if (defaultLabelConfig) {\n      for (const key of Object.keys(config.labels)) {\n        // getting out of my for not changing the original config object\n        if (config.nonFlat) {\n          ;(config as NonFlatNeovisConfig) = {\n            ...(config as NonFlatNeovisConfig),\n            labels: {\n              ...(config.labels as Record<string, NonFlatLabelConfig>),\n              [key]: deepmerge(\n                defaultLabelConfig as NonFlatLabelConfig,\n                config.labels?.[key] as NonFlatLabelConfig,\n              ),\n            },\n          }\n        } else {\n          ;(config as NeovisConfig) = {\n            ...(config as NeovisConfig),\n            labels: {\n              ...(config.labels as Record<string, LabelConfig>),\n              [key]: {\n                ...deepmerge(\n                  defaultLabelConfig as LabelConfig,\n                  config.labels?.[key] as LabelConfig,\n                ),\n                [NEOVIS_ADVANCED_CONFIG]: deepmerge(\n                  (defaultLabelConfig as LabelConfig)[NEOVIS_ADVANCED_CONFIG] ??\n                    {},\n                  (config.labels?.[key] as LabelConfig)[\n                    NEOVIS_ADVANCED_CONFIG\n                  ] ?? {},\n                ),\n              },\n            },\n          }\n        }\n      }\n    }\n    if (defaultRelationshipConfig) {\n      for (const key of Object.keys(config.relationships)) {\n        // getting out of my for not changing the original config object\n        if (config.nonFlat) {\n          ;(config as NonFlatNeovisConfig) = {\n            ...(config as NonFlatNeovisConfig),\n            relationships: {\n              ...(config.relationships as Record<\n                string,\n                NonFlatRelationsipConfig\n              >),\n              [key]: deepmerge(\n                defaultRelationshipConfig as NonFlatRelationsipConfig,\n                config.relationships?.[key] as NonFlatRelationsipConfig,\n              ),\n            },\n          }\n        } else {\n          ;(config as NeovisConfig) = {\n            ...(config as NeovisConfig),\n            relationships: {\n              ...(config.relationships as Record<string, RelationshipConfig>),\n              [key]: {\n                ...deepmerge(\n                  defaultRelationshipConfig as RelationshipConfig,\n                  config.relationships?.[key] as RelationshipConfig,\n                ),\n                [NEOVIS_ADVANCED_CONFIG]: deepmerge(\n                  (defaultRelationshipConfig as RelationshipConfig)[\n                    NEOVIS_ADVANCED_CONFIG\n                  ] ?? {},\n                  (config.relationships?.[key] as RelationshipConfig)[\n                    NEOVIS_ADVANCED_CONFIG\n                  ] ?? {},\n                ),\n              },\n            },\n          }\n        }\n      }\n    }\n    this.#config = config\n    if (!config.dataFunction) {\n      this.#driver = isNeo4jDriver(config.neo4j)\n        ? config.neo4j\n        : Neo4j.driver(\n            config.neo4j?.serverUrl ?? defaults.neo4j.neo4jUri,\n            Neo4j.auth.basic(\n              config.neo4j?.serverUser ?? defaults.neo4j.neo4jUser,\n              config.neo4j?.serverPassword ?? defaults.neo4j.neo4jPassword,\n            ),\n            deepmerge(\n              defaults.neo4j.driverConfig,\n              config.neo4j?.driverConfig ?? {},\n            ),\n          )\n\n      this.#database = config.serverDatabase\n      this.#query = config.initialCypher ?? defaults.neo4j.initialQuery\n    }\n    this.#container = document.getElementById(config.containerId)\n    this.#config.groupAsLabel =\n      config.groupAsLabel ?? defaults.neo4j.groupAsLabel\n  }\n\n  async #runCypher<T>(\n    cypher: Cypher,\n    id: number | Neo4jTypes.Integer,\n  ): Promise<T | T[]> {\n    const session = this.#driver.session(\n      this.#database && { database: this.#database },\n    )\n    const results: T[] = []\n\n    try {\n      const result = await session.readTransaction((tx) =>\n        tx.run(cypher, { id }),\n      )\n      for (const record of result.records) {\n        record.forEach((v) => {\n          results.push(v)\n        })\n      }\n    } finally {\n      await session.close()\n    }\n\n    if (results.length === 0) {\n      return undefined\n    } else if (results.length === 1) {\n      return results.pop()\n    }\n\n    return results\n  }\n\n  #runFunction<VIS_TYPE, NEO_TYPE>(\n    func: (neoObj: NEO_TYPE) => VIS_TYPE | Promise<VIS_TYPE>,\n    node: NEO_TYPE,\n  ): Promise<VIS_TYPE> | VIS_TYPE {\n    if (typeof func === 'function') {\n      return func(node)\n    }\n    throw new Error('Function type property field must be a function')\n  }\n\n  #buildStaticObject<VIS_TYPE>(staticConfig: VIS_TYPE, object: VIS_TYPE): void {\n    if (staticConfig && typeof staticConfig === 'object') {\n      for (const prop of Object.keys(staticConfig) as (keyof VIS_TYPE)[]) {\n        const value = staticConfig[prop]\n        if (value && typeof value === 'object') {\n          if (!object[prop]) {\n            object[prop as string] = {}\n          }\n          this.#buildStaticObject(\n            value,\n            object[prop] as VIS_TYPE[keyof VIS_TYPE] & object,\n          )\n        } else {\n          object[prop] = value\n        }\n      }\n    }\n  }\n\n  #buildPropertyNameObject<VIS_TYPE, NEO_TYPE>(\n    propertyNameConfig: RecursiveMapTo<VIS_TYPE, string>,\n    object: VIS_TYPE,\n    neo4jObj: NEO_TYPE,\n  ): void {\n    if (propertyNameConfig && typeof propertyNameConfig === 'object') {\n      for (const prop of Object.keys(\n        propertyNameConfig,\n      ) as (keyof VIS_TYPE)[]) {\n        const property = propertyNameConfig[prop]\n        if (typeof property === 'object') {\n          if (!object[prop]) {\n            object[prop as string] = {}\n          }\n          this.#buildPropertyNameObject(\n            property as RecursiveMapTo<VIS_TYPE[keyof VIS_TYPE], string>,\n            object[prop],\n            neo4jObj,\n          )\n        } else {\n          const value = propertyNameConfig[prop]\n          object[prop] = _retrieveProperty(value as string, neo4jObj)\n        }\n      }\n    }\n  }\n\n  *#buildCypherObject<VIS_TYPE>(\n    cypherConfig: RecursiveMapTo<VIS_TYPE, Cypher>,\n    object: VIS_TYPE,\n    id: number | Neo4jTypes.Integer,\n  ): Generator<Promise<void>> {\n    if (cypherConfig && typeof cypherConfig === 'object') {\n      for (const prop of Object.keys(cypherConfig) as (keyof VIS_TYPE)[]) {\n        const value = cypherConfig[prop]\n        if (value && typeof value === 'object') {\n          if (!object[prop]) {\n            object[prop as string] = {}\n          }\n          yield* this.#buildCypherObject(\n            value as RecursiveMapTo<VIS_TYPE[keyof VIS_TYPE], Cypher>,\n            object[prop],\n            id,\n          )\n        } else {\n          const promise = this.#runCypher(value as string, id) as Promise<\n            VIS_TYPE[keyof VIS_TYPE]\n          >\n          yield Promise.resolve(promise).then((value) => {\n            object[prop] = value\n          }) as Promise<void>\n        }\n      }\n    }\n  }\n\n  *#buildFunctionObject<VIS_TYPE, NEO_TYPE>(\n    functionConfig: RecursiveMapToFunction<VIS_TYPE, NEO_TYPE>,\n    object: VIS_TYPE,\n    neo4jObj: NEO_TYPE,\n  ): Generator<Promise<void>> {\n    if (functionConfig && typeof functionConfig === 'object') {\n      for (const prop of Object.keys(functionConfig) as (keyof VIS_TYPE)[]) {\n        const func = functionConfig[prop]\n        if (func && typeof func === 'object') {\n          if (!object[prop]) {\n            object[prop as string] = {}\n          }\n          yield* this.#buildFunctionObject(\n            func as RecursiveMapToFunction<VIS_TYPE[keyof VIS_TYPE], NEO_TYPE>,\n            object[prop],\n            neo4jObj,\n          )\n        } else {\n          const promise = this.#runFunction(\n            func as (neo: NEO_TYPE) => VIS_TYPE[keyof VIS_TYPE],\n            neo4jObj,\n          )\n          yield Promise.resolve(promise).then((value) => {\n            object[prop] = value\n          }) as Promise<void>\n        }\n      }\n    }\n  }\n\n  async #buildVisObject<VIS_TYPE, NEO_TYPE>(\n    config:\n      | NeovisDataConfig<VIS_TYPE, NEO_TYPE>\n      | NonFlatNeoVisAdvanceConfig<VIS_TYPE, NEO_TYPE>,\n    baseObject: VIS_TYPE,\n    neo4jObject: NEO_TYPE,\n    id: number | Neo4jTypes.Integer,\n  ): Promise<void> {\n    if (!config) {\n      return\n    }\n    let staticConfig: VIS_TYPE\n    let cypherConfig: RecursiveMapTo<VIS_TYPE, Cypher>\n    let propertyConfig: RecursiveMapTo<VIS_TYPE, string>\n    let functionConfig: RecursiveMapToFunction<VIS_TYPE, NEO_TYPE>\n\n    if (this.#config.nonFlat) {\n      if (config[NEOVIS_ADVANCED_CONFIG] !== undefined) {\n        throw new Error(\n          'Advanced config and non flat config should not be together',\n        )\n      }\n      config = config as NonFlatNeoVisAdvanceConfig<VIS_TYPE, NEO_TYPE>\n      staticConfig = config.static\n      cypherConfig = config.cypher\n      propertyConfig = config.property\n      functionConfig = config.function\n    } else {\n      config = config as NeovisDataConfig<VIS_TYPE, NEO_TYPE>\n      const advancedConfig = config[NEOVIS_ADVANCED_CONFIG]\n      propertyConfig = config\n      if (advancedConfig !== undefined && typeof advancedConfig != 'object') {\n        throw new Error(\n          'Advanced config should be an object. See documentation for details.',\n        )\n      }\n      cypherConfig = advancedConfig?.cypher\n      staticConfig = advancedConfig?.static\n      functionConfig = advancedConfig?.function\n    }\n    this.#buildPropertyNameObject(propertyConfig, baseObject, neo4jObject)\n    this.#buildStaticObject(staticConfig, baseObject)\n    await Promise.all(this.#buildCypherObject(cypherConfig, baseObject, id))\n    await Promise.all(\n      this.#buildFunctionObject(functionConfig, baseObject, neo4jObject),\n    )\n  }\n\n  /**\n   * Build node object for vis from a neo4j Node\n   * @param neo4jNode\n   * @returns {{}}\n   */\n  async #buildNodeVisObject(\n    neo4jNode: Neo4jTypes.Node<NumberOrInteger>,\n  ): Promise<Node> {\n    const node: Partial<Node> = {}\n    const label: string = neo4jNode.labels[0]\n\n    const labelConfig: LabelConfig | NonFlatLabelConfig =\n      this.#config?.labels?.[label] ??\n      (this.#config as NonFlatNeovisConfig)?.defaultLabelConfig ??\n      (this.#config as NeovisConfig)?.labels?.[NEOVIS_DEFAULT_CONFIG]\n\n    node.id = isInt(neo4jNode.identity)\n      ? integerToNumber(neo4jNode.identity as Neo4jTypes.Integer)\n      : (neo4jNode.identity as number)\n    node.raw = neo4jNode\n    if (this.#config.groupAsLabel) {\n      node.group = label\n    }\n\n    await this.#buildVisObject(\n      labelConfig,\n      node as Node,\n      neo4jNode,\n      neo4jNode.identity,\n    )\n\n    return node as Node\n  }\n\n  /**\n   * Build edge object for vis from a neo4j Relationship\n   * @param r\n   * @returns {{}}\n   */\n  async #buildEdgeVisObject(\n    r: Neo4jTypes.Relationship<NumberOrInteger>,\n  ): Promise<Edge> {\n    const relationshipConfig =\n      this.#config?.relationships?.[r.type] ??\n      (this.#config as NonFlatNeovisConfig).defaultRelationshipsConfig ??\n      (this.#config as NeovisConfig)?.relationships?.[NEOVIS_DEFAULT_CONFIG]\n\n    const edge: Partial<Edge> = {}\n    edge.id = isInt(r.identity)\n      ? integerToNumber(r.identity as Neo4jTypes.Integer)\n      : (r.identity as number)\n    edge.from = isInt(r.start)\n      ? integerToNumber(r.start as Neo4jTypes.Integer)\n      : (r.start as number)\n    edge.to = isInt(r.end)\n      ? integerToNumber(r.end as Neo4jTypes.Integer)\n      : (r.end as number)\n    edge.raw = r\n\n    await this.#buildVisObject(relationshipConfig, edge as Edge, r, r.identity)\n\n    return edge as Edge\n  }\n\n  /**\n   * Renders the network\n   */\n  render(\n    query_or_function?: Cypher | DataFunctionType,\n    parameters?: unknown,\n  ): void {\n    if (this.#config.dataFunction || typeof query_or_function === 'function') {\n      this.#runFunctionDataGetter(\n        typeof query_or_function === 'function'\n          ? query_or_function\n          : this.#config.dataFunction,\n        parameters,\n      )\n    } else {\n      this.#runNeo4jDataGetter(query_or_function as Cypher, parameters)\n    }\n  }\n\n  async #runFunctionDataGetter(func: DataFunctionType, parameters: unknown) {\n    let recordCount = 0\n    try {\n      const dataBuildPromises: Promise<unknown>[] = []\n      for await (const record of await func(parameters)) {\n        dataBuildPromises.push(this.#createSingleRecord(record))\n        recordCount++\n      }\n      await Promise.all(dataBuildPromises)\n    } catch (error) {\n      this.#events.generateEvent(NeoVisEvents.ErrorEvent, { error })\n      return\n    }\n    this.#completeRun()\n    this.#events.generateEvent(NeoVisEvents.CompletionEvent, { recordCount })\n  }\n\n  #runNeo4jDataGetter(query?: Cypher, parameters?: unknown) {\n    // connect to Neo4j instance\n    // run query\n    let recordCount = 0\n    const _query = query || this.#query\n    const session = this.#driver.session(\n      this.#database ? { database: this.#database } : undefined,\n    )\n    const dataBuildPromises: Promise<unknown>[] = []\n    session.run(_query, parameters).subscribe({\n      onNext: (record) => {\n        recordCount++\n        dataBuildPromises.push(this.#createSingleRecord(record))\n      },\n      onCompleted: async () => {\n        await Promise.all(dataBuildPromises)\n        await session.close()\n\n        this.#completeRun()\n        this.#events.generateEvent(NeoVisEvents.CompletionEvent, {\n          recordCount,\n        })\n      },\n      onError: (error) => {\n        this.#consoleLog(error, 'error')\n        this.#events.generateEvent(NeoVisEvents.ErrorEvent, { error })\n      },\n    } as Neo4jCore.ResultObserver)\n  }\n\n  async #createSingleRecord(\n    record: Neo4jTypes.Record | Partial<Neo4jTypes.Record>,\n  ) {\n    if (!(record instanceof Neo4j.types.Record)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const fields: (FakeNode | FakePath | FakeRelationship)[] = (record as any)\n        ._fields\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      record = new Neo4j.types.Record(\n        record.keys,\n        fields.map(dumbToNeo4j),\n        (record as any)._fieldLookup,\n      )\n    }\n    this.#consoleLog('CLASS NAME')\n    this.#consoleLog(record?.constructor.name)\n    this.#consoleLog(record)\n\n    const dataPromises = record.map(async (v: object) => {\n      this.#consoleLog('Constructor:')\n      this.#consoleLog(v?.constructor.name)\n      if (isNode(v)) {\n        const node = await this.#buildNodeVisObject(v)\n        try {\n          this.#data.nodes.update(node)\n        } catch (e) {\n          this.#consoleLog(e, 'error')\n        }\n      } else if (isRelationship(v)) {\n        const edge = await this.#buildEdgeVisObject(v)\n        console.log(edge)\n        console.log(edge.id)\n        this.#data.edges.update(edge)\n      } else if (isPath(v)) {\n        this.#consoleLog('PATH')\n        this.#consoleLog(v)\n        const startNode = await this.#buildNodeVisObject(v.start)\n        const endNode = await this.#buildNodeVisObject(v.end)\n\n        this.#data.nodes.update(startNode)\n        this.#data.nodes.update(endNode)\n\n        for (const obj of v.segments) {\n          this.#data.nodes.update(await this.#buildNodeVisObject(obj.start))\n          this.#data.nodes.update(await this.#buildNodeVisObject(obj.end))\n          this.#data.edges.update(\n            await this.#buildEdgeVisObject(obj.relationship),\n          )\n        }\n      } else if (Array.isArray(v)) {\n        for (const obj of v) {\n          this.#consoleLog('Array element constructor:')\n          this.#consoleLog(obj?.constructor.name)\n          if (isNode(obj)) {\n            const node = await this.#buildNodeVisObject(obj)\n            this.#data.nodes.update(node)\n          } else if (isRelationship(obj)) {\n            const edge = await this.#buildEdgeVisObject(obj)\n\n            this.#data.edges.update(edge)\n          }\n        }\n      }\n    })\n    return Promise.all(dataPromises)\n  }\n\n  #completeRun() {\n    if (!this.#network) {\n      const options = deepmerge(defaults.visJs, this.#config.visConfig ?? {})\n\n      const container = this.#container\n\n      this.#consoleLog(this.#data.nodes)\n      this.#consoleLog(this.#data.edges)\n\n      this.#network = new vis.Network(container, this.#data, options)\n    }\n    this.#consoleLog('completed')\n    setTimeout(() => {\n      this.#network.stopSimulation()\n    }, 10000)\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const neoVis = this\n    this.#network.on(\n      'click',\n      function (\n        this: VisNetwork.Network,\n        params: {\n          nodes: Node[]\n          edges: Edge[]\n          pointer: { DOM: VisNetwork.Position }\n        },\n      ) {\n        if (params.nodes.length > 0) {\n          const nodeId = this.getNodeAt(params.pointer.DOM) as number\n          neoVis.#events.generateEvent(NeoVisEvents.ClickNodeEvent, {\n            nodeId,\n            node: neoVis.#data.nodes.get(nodeId),\n          })\n        } else if (params.edges.length > 0) {\n          const edgeId = this.getEdgeAt(params.pointer.DOM) as number\n          neoVis.#events.generateEvent(NeoVisEvents.ClickEdgeEvent, {\n            edgeId,\n            edge: neoVis.#data.edges.get(edgeId),\n          })\n        }\n      },\n    )\n  }\n\n  /**\n   * Clear the data for the visualization\n   */\n  clearNetwork(): void {\n    this.#data.nodes.clear()\n    this.#data.edges.clear()\n  }\n\n  /**\n   *\n   * @param {string} eventType Event type to be handled\n   * @param {Function} handler Handler to manage the event\n   */\n  registerOnEvent<T extends NeoVisEvents>(\n    eventType: T,\n    handler: EventFunctionTypes[T],\n  ): void {\n    this.#events.register(eventType, handler)\n  }\n\n  /**\n   * Reset the config object and reload data\n   * @param config\n   */\n  reinit(\n    config: NeovisConfig | NonFlatNeovisConfig,\n    parameter?: unknown,\n  ): void {\n    this.#init(config)\n    this.render(undefined, parameter)\n  }\n\n  /**\n   * Clear the network and fetch live data form the server and reload the visualization\n   */\n  reload(parameter?: unknown): void {\n    this.clearNetwork()\n    this.render(undefined, parameter)\n  }\n\n  /**\n   * Stabilize the visualization\n   */\n  stabilize(): void {\n    this.#network.stopSimulation()\n    this.#consoleLog('Calling stopSimulation')\n  }\n\n  /**\n   * Execute an arbitrary Cypher query and re-render the visualization\n   * @param query\n   * @param parameters - parameters to send to the cypher\n   */\n  renderWithCypher(query: Cypher, parameters?: unknown): void {\n    // this._config.initialCypher = query;\n    this.clearNetwork()\n    this.#query = query\n    this.render(undefined, parameters)\n  }\n\n  /**\n   * Execute an arbitrary function and re-render the visualization\n   * @param func\n   * @param parameters - parameters to send to the function\n   */\n  renderWithFunction(func: DataFunctionType, parameters?: unknown): void {\n    this.clearNetwork()\n    this.render(func, parameters)\n  }\n\n  /**\n   * Execute an arbitrary Cypher query and update the current visualization, retaning current nodes\n   * This function will not change the original query given by renderWithCypher or the inital cypher.\n   * @param parameters - parameters to send to the cypher\n   *\n   */\n  updateWithCypher(query: Cypher, parameters?: unknown): void {\n    this.render(query, parameters)\n  }\n\n  /**\n   * Execute an arbitrary function and update the visualization\n   * @param func\n   * @param parameters - parameters to send to the function\n   */\n  updateWithFunction(func: DataFunctionType, parameters?: unknown): void {\n    this.render(func, parameters)\n  }\n}\n\n/**\n * @deprecated for migration only\n */\nexport interface OldLabelConfig {\n  caption?: string | ((node: Neo4jTypes.Node) => string)\n  size?: number\n  community?: string\n  sizeCypher?: string\n  image?: string\n  font?: string | VisNetwork.Font\n  title_properties?: string[]\n}\n\n/**\n * @deprecated for migration only\n */\nexport interface OldRelationshipConfig {\n  thickness?: number\n  caption?: boolean | string\n}\n\n/**\n * @deprecated for migration only\n */\nexport interface OldNeoVisConfig {\n  container_id: string\n  server_url: string\n  server_user: string\n  server_password: string\n  server_database: string\n  labels?: {\n    [label: string]: OldLabelConfig\n    [NEOVIS_DEFAULT_CONFIG]?: OldLabelConfig\n  }\n  relationships?: {\n    [relationship: string]: OldRelationshipConfig\n    [NEOVIS_DEFAULT_CONFIG]?: OldRelationshipConfig\n  }\n  arrows?: boolean\n  hierarchical?: boolean\n  hierarchical_sort_method?: 'hubsize' | 'directed'\n  initial_cypher?: string\n  console_debug?: boolean\n  encrypted?: 'ENCRYPTION_OFF' | 'ENCRYPTION_ON'\n  trust?: 'TRUST_ALL_CERTIFICATES' | 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'\n}\n\n/**\n * @deprecated will be removed in the future\n * migrate old config to the new one\n * @param oldNeoVisConfig 1.0.0 config object\n */\nexport function migrateFromOldConfig(\n  oldNeoVisConfig: OldNeoVisConfig,\n): NeovisConfig {\n  return {\n    containerId: oldNeoVisConfig.container_id,\n    initialCypher: oldNeoVisConfig.initial_cypher,\n    consoleDebug: oldNeoVisConfig.console_debug,\n    serverDatabase: oldNeoVisConfig.server_database,\n    neo4j: {\n      serverUrl: oldNeoVisConfig.server_url,\n      serverUser: oldNeoVisConfig.server_user,\n      serverPassword: oldNeoVisConfig.server_password,\n      driverConfig:\n        oldNeoVisConfig.encrypted || oldNeoVisConfig.trust\n          ? {\n              encrypted: oldNeoVisConfig.encrypted,\n              trust: oldNeoVisConfig.trust,\n            }\n          : undefined,\n    },\n    visConfig:\n      oldNeoVisConfig.arrows || oldNeoVisConfig.hierarchical\n        ? {\n            edges: oldNeoVisConfig.arrows\n              ? {\n                  arrows: {\n                    to: {\n                      enabled: oldNeoVisConfig.arrows,\n                    },\n                  },\n                }\n              : undefined,\n            layout: oldNeoVisConfig.hierarchical\n              ? {\n                  enabled: oldNeoVisConfig.hierarchical,\n                  sortMethod: oldNeoVisConfig.hierarchical_sort_method,\n                }\n              : undefined,\n          }\n        : undefined,\n    labels: oldNeoVisConfig.labels\n      ? (\n          Object.entries(oldNeoVisConfig.labels) as [\n            string | typeof NEOVIS_DEFAULT_CONFIG,\n            OldLabelConfig,\n          ][]\n        )\n          .concat(\n            oldNeoVisConfig.labels?.[NEOVIS_DEFAULT_CONFIG]\n              ? [\n                  [\n                    NEOVIS_DEFAULT_CONFIG,\n                    oldNeoVisConfig.labels[NEOVIS_DEFAULT_CONFIG],\n                  ],\n                ]\n              : [],\n          )\n          .reduce((newLabelsConfig, [label, oldLabelConfig]) => {\n            newLabelsConfig[label] = {\n              label:\n                typeof oldLabelConfig.caption !== 'function'\n                  ? oldLabelConfig.caption\n                  : undefined,\n              value: oldLabelConfig.size,\n              group: oldLabelConfig.community,\n              [NEOVIS_ADVANCED_CONFIG]: {\n                cypher: oldLabelConfig.sizeCypher\n                  ? {\n                      value: oldLabelConfig.sizeCypher,\n                    }\n                  : undefined,\n                function: deepmerge(\n                  {\n                    title: (props) =>\n                      objectToTitleHtml(props, oldLabelConfig.title_properties),\n                  },\n                  typeof oldLabelConfig.caption === 'function'\n                    ? { label: oldLabelConfig.caption }\n                    : {},\n                ),\n                static: {\n                  font: oldLabelConfig.font,\n                  shape: oldLabelConfig.image ? 'image' : 'dot',\n                  image: oldLabelConfig.image,\n                },\n              },\n            }\n            return newLabelsConfig\n          }, {})\n      : undefined,\n    relationships: oldNeoVisConfig.relationships\n      ? (\n          Object.entries(oldNeoVisConfig.relationships) as [\n            string | typeof NEOVIS_DEFAULT_CONFIG,\n            OldRelationshipConfig,\n          ][]\n        )\n          .concat(\n            oldNeoVisConfig.relationships[NEOVIS_DEFAULT_CONFIG]\n              ? [\n                  [\n                    NEOVIS_DEFAULT_CONFIG,\n                    oldNeoVisConfig.relationships[NEOVIS_DEFAULT_CONFIG],\n                  ],\n                ]\n              : [],\n          )\n          .reduce((newLabelsConfig, [relationship, oldRelationshipsConfig]) => {\n            newLabelsConfig[relationship] = {\n              value: oldRelationshipsConfig.thickness,\n              label:\n                typeof oldRelationshipsConfig.caption === 'string'\n                  ? oldRelationshipsConfig.caption\n                  : undefined,\n              [NEOVIS_ADVANCED_CONFIG]: {\n                function: {\n                  title: objectToTitleHtml,\n                },\n              },\n            }\n            return newLabelsConfig\n          }, {})\n      : undefined,\n  }\n}\n\nexport default NeoVis\n"],"names":["root","factory","exports","module","require","define","amd","undefined","self","__WEBPACK_EXTERNAL_MODULE__783__","__WEBPACK_EXTERNAL_MODULE__642__","__WEBPACK_EXTERNAL_MODULE__779__","__WEBPACK_EXTERNAL_MODULE__995__","__WEBPACK_EXTERNAL_MODULE__852__","__WEBPACK_EXTERNAL_MODULE__820__","__WEBPACK_EXTERNAL_MODULE__270__","__WEBPACK_EXTERNAL_MODULE__83__","__WEBPACK_EXTERNAL_MODULE__209__","__WEBPACK_EXTERNAL_MODULE__848__","__WEBPACK_EXTERNAL_MODULE__317__","__WEBPACK_EXTERNAL_MODULE__483__","__WEBPACK_EXTERNAL_MODULE__349__","__WEBPACK_EXTERNAL_MODULE__723__","__WEBPACK_EXTERNAL_MODULE__519__","__WEBPACK_EXTERNAL_MODULE__949__","__WEBPACK_EXTERNAL_MODULE__55__","__WEBPACK_EXTERNAL_MODULE__365__","__WEBPACK_EXTERNAL_MODULE__613__","__WEBPACK_EXTERNAL_MODULE__581__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","defaults","neo4j","initialQuery","neo4jUri","neo4jUser","neo4jPassword","driverConfig","encrypted","trust","maxConnectionPoolSize","connectionAcquisitionTimeout","disableLosslessIntegers","groupAsLabel","visJs","nodes","font","size","strokeWidth","scaling","edges","arrows","to","enabled","length","layout","improvedLayout","hierarchical","sortMethod","physics","adaptiveTimestep","stabilization","iterations","fit","NeoVisEvents","EventController","constructor","_defineProperty","this","_handlers","CompletionEvent","ErrorEvent","ClickNodeEvent","ClickEdgeEvent","register","eventType","handler","Error","push","generateEvent","values","NEOVIS_DEFAULT_CONFIG","_Symbol","NEOVIS_ADVANCED_CONFIG","_classPrivateMethodInitSpec","privateSet","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","privateMap","set","privateCollection","has","TypeError","_classPrivateMethodGet","receiver","fn","toNeo4jInt","_ref","low","high","Neo4j","integerToNumber","integer","getHighBits","toInt","toString","FakeTypeToType","keys","type","propertyToNormal","_Array$isArray","_mapInstanceProperty","_Object$keys","fakeType","isCorrectType","rets","_keysInstanceProperty","property","properyMapWithIdentity","properties","_context","_reduceInstanceProperty","_Object$entries","ret","_ref2","dumbToNeo4j","field","identity","labels","start","end","_context2","segments","segment","relationship","_propertyToHtml","out","val","_retrieveProperty","isInt","objectToTitleHtml","neo4jObject","titleProperties","titleString","propVal","title","document","createElement","innerHTML","objectToTitleString","_data","_WeakMap","_network","_events","_config","_driver","_database","_query2","_container","_consoleLog","_WeakSet","_init","_runCypher","_runFunction","_buildStaticObject","_buildPropertyNameObject","_buildCypherObject","_buildFunctionObject","_buildVisObject","_buildNodeVisObject","_buildEdgeVisObject","_runFunctionDataGetter","_runNeo4jDataGetter","_createSingleRecord","_completeRun","NeoVis","_classPrivateFieldGet","network","config","writable","vis","_init2","_consoleLog2","render","query_or_function","parameters","dataFunction","_runFunctionDataGetter2","_runNeo4jDataGetter2","clearNetwork","clear","registerOnEvent","reinit","parameter","reload","stabilize","stopSimulation","renderWithCypher","query","_classPrivateFieldSet","renderWithFunction","func","updateWithCypher","updateWithFunction","message","level","arguments","consoleDebug","console","defaultLabelConfig","defaultRelationshipConfig","nonFlat","defaultRelationshipsConfig","relationships","deepmerge","serverUrl","serverUser","serverPassword","serverDatabase","initialCypher","getElementById","containerId","_runCypher2","cypher","id","session","database","results","result","readTransaction","tx","run","record","records","_forEachInstanceProperty","v","close","pop","_runFunction2","node","_buildStaticObject2","staticConfig","object","_buildPropertyNameObject2","propertyNameConfig","neo4jObj","_buildCypherObject2","cypherConfig","promise","_Promise","then","_buildFunctionObject2","functionConfig","_buildVisObject2","baseObject","propertyConfig","static","function","advancedConfig","_buildNodeVisObject2","neo4jNode","label","labelConfig","raw","group","_buildEdgeVisObject2","relationshipConfig","edge","from","recordCount","dataBuildPromises","_createSingleRecord2","error","_completeRun2","_query","subscribe","onNext","onCompleted","async","onError","fields","_fields","_fieldLookup","name","dataPromises","isNode","update","e","isRelationship","log","isPath","startNode","endNode","options","visConfig","container","_setTimeout","neoVis","on","params","nodeId","getNodeAt","pointer","DOM","edgeId","getEdgeAt","migrateFromOldConfig","oldNeoVisConfig","_context3","_context4","_context5","_context6","container_id","initial_cypher","console_debug","server_database","server_url","server_user","server_password","hierarchical_sort_method","_concatInstanceProperty","newLabelsConfig","_ref3","oldLabelConfig","caption","community","sizeCypher","props","title_properties","shape","image","_ref4","oldRelationshipsConfig","thickness"],"sourceRoot":""}